### YamlMime:ManagedReference
items:
- uid: ParseDocsPages.Data_Model.TocModel
  commentId: T:ParseDocsPages.Data_Model.TocModel
  id: TocModel
  parent: ParseDocsPages.Data_Model
  children:
  - ParseDocsPages.Data_Model.TocModel.Children
  - ParseDocsPages.Data_Model.TocModel.CompareTo(ParseDocsPages.Data_Model.TocModel)
  - ParseDocsPages.Data_Model.TocModel.Href
  - ParseDocsPages.Data_Model.TocModel.IsExpand
  - ParseDocsPages.Data_Model.TocModel.IsFromRoot
  - ParseDocsPages.Data_Model.TocModel.Name
  - ParseDocsPages.Data_Model.TocModel.Parent
  - ParseDocsPages.Data_Model.TocModel.RelativePath
  langs:
  - csharp
  - vb
  name: TocModel
  nameWithType: TocModel
  fullName: ParseDocsPages.Data_Model.TocModel
  type: Class
  source:
    id: TocModel
    path: E:\Test\CATS\ParsePages\ParseDocsPages\Data Model\TocModel.cs
    startLine: 9
  assemblies:
  - ParseDocsPages
  namespace: ParseDocsPages.Data_Model
  syntax:
    content: 'public class TocModel : IComparable<TocModel>'
    content.vb: >-
      Public Class TocModel
          Implements IComparable(Of TocModel)
  inheritance:
  - System.Object
  implements:
  - System.IComparable{ParseDocsPages.Data_Model.TocModel}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - ParseDocsPages.Data_Model.TocModel.ParseCommon.Utilities.SerializeXml``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ParseDocsPages.Data_Model.TocModel.Href
  commentId: P:ParseDocsPages.Data_Model.TocModel.Href
  id: Href
  parent: ParseDocsPages.Data_Model.TocModel
  langs:
  - csharp
  - vb
  name: Href
  nameWithType: TocModel.Href
  fullName: ParseDocsPages.Data_Model.TocModel.Href
  type: Property
  source:
    id: Href
    path: E:\Test\CATS\ParsePages\ParseDocsPages\Data Model\TocModel.cs
    startLine: 11
  assemblies:
  - ParseDocsPages
  namespace: ParseDocsPages.Data_Model
  syntax:
    content: >-
      [JsonProperty(PropertyName = "href")]

      public string Href { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="href")>

      Public Property Href As String
    parameters: []
    return:
      type: System.String
  overload: ParseDocsPages.Data_Model.TocModel.Href*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: href
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ParseDocsPages.Data_Model.TocModel.Name
  commentId: P:ParseDocsPages.Data_Model.TocModel.Name
  id: Name
  parent: ParseDocsPages.Data_Model.TocModel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: TocModel.Name
  fullName: ParseDocsPages.Data_Model.TocModel.Name
  type: Property
  source:
    id: Name
    path: E:\Test\CATS\ParsePages\ParseDocsPages\Data Model\TocModel.cs
    startLine: 14
  assemblies:
  - ParseDocsPages
  namespace: ParseDocsPages.Data_Model
  syntax:
    content: >-
      [JsonProperty(PropertyName = "toc_title")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="toc_title")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: ParseDocsPages.Data_Model.TocModel.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: toc_title
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ParseDocsPages.Data_Model.TocModel.Children
  commentId: P:ParseDocsPages.Data_Model.TocModel.Children
  id: Children
  parent: ParseDocsPages.Data_Model.TocModel
  langs:
  - csharp
  - vb
  name: Children
  nameWithType: TocModel.Children
  fullName: ParseDocsPages.Data_Model.TocModel.Children
  type: Property
  source:
    id: Children
    path: E:\Test\CATS\ParsePages\ParseDocsPages\Data Model\TocModel.cs
    startLine: 17
  assemblies:
  - ParseDocsPages
  namespace: ParseDocsPages.Data_Model
  syntax:
    content: >-
      [JsonProperty(PropertyName = "children")]

      public List<TocModel> Children { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="children")>

      Public Property Children As List(Of TocModel)
    parameters: []
    return:
      type: System.Collections.Generic.List{ParseDocsPages.Data_Model.TocModel}
  overload: ParseDocsPages.Data_Model.TocModel.Children*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: children
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ParseDocsPages.Data_Model.TocModel.RelativePath
  commentId: P:ParseDocsPages.Data_Model.TocModel.RelativePath
  id: RelativePath
  parent: ParseDocsPages.Data_Model.TocModel
  langs:
  - csharp
  - vb
  name: RelativePath
  nameWithType: TocModel.RelativePath
  fullName: ParseDocsPages.Data_Model.TocModel.RelativePath
  type: Property
  source:
    id: RelativePath
    path: E:\Test\CATS\ParsePages\ParseDocsPages\Data Model\TocModel.cs
    startLine: 20
  assemblies:
  - ParseDocsPages
  namespace: ParseDocsPages.Data_Model
  syntax:
    content: >-
      [JsonProperty(PropertyName = "relative_path_in_depot")]

      public string RelativePath { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="relative_path_in_depot")>

      Public Property RelativePath As String
    parameters: []
    return:
      type: System.String
  overload: ParseDocsPages.Data_Model.TocModel.RelativePath*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: relative_path_in_depot
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ParseDocsPages.Data_Model.TocModel.Parent
  commentId: P:ParseDocsPages.Data_Model.TocModel.Parent
  id: Parent
  parent: ParseDocsPages.Data_Model.TocModel
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: TocModel.Parent
  fullName: ParseDocsPages.Data_Model.TocModel.Parent
  type: Property
  source:
    id: Parent
    path: E:\Test\CATS\ParsePages\ParseDocsPages\Data Model\TocModel.cs
    startLine: 23
  assemblies:
  - ParseDocsPages
  namespace: ParseDocsPages.Data_Model
  syntax:
    content: public TocModel Parent { get; set; }
    content.vb: Public Property Parent As TocModel
    parameters: []
    return:
      type: ParseDocsPages.Data_Model.TocModel
  overload: ParseDocsPages.Data_Model.TocModel.Parent*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ParseDocsPages.Data_Model.TocModel.IsExpand
  commentId: P:ParseDocsPages.Data_Model.TocModel.IsExpand
  id: IsExpand
  parent: ParseDocsPages.Data_Model.TocModel
  langs:
  - csharp
  - vb
  name: IsExpand
  nameWithType: TocModel.IsExpand
  fullName: ParseDocsPages.Data_Model.TocModel.IsExpand
  type: Property
  source:
    id: IsExpand
    path: E:\Test\CATS\ParsePages\ParseDocsPages\Data Model\TocModel.cs
    startLine: 25
  assemblies:
  - ParseDocsPages
  namespace: ParseDocsPages.Data_Model
  syntax:
    content: public bool IsExpand { get; set; }
    content.vb: Public Property IsExpand As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: ParseDocsPages.Data_Model.TocModel.IsExpand*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ParseDocsPages.Data_Model.TocModel.IsFromRoot
  commentId: P:ParseDocsPages.Data_Model.TocModel.IsFromRoot
  id: IsFromRoot
  parent: ParseDocsPages.Data_Model.TocModel
  langs:
  - csharp
  - vb
  name: IsFromRoot
  nameWithType: TocModel.IsFromRoot
  fullName: ParseDocsPages.Data_Model.TocModel.IsFromRoot
  type: Property
  source:
    id: IsFromRoot
    path: E:\Test\CATS\ParsePages\ParseDocsPages\Data Model\TocModel.cs
    startLine: 27
  assemblies:
  - ParseDocsPages
  namespace: ParseDocsPages.Data_Model
  syntax:
    content: public bool IsFromRoot { get; set; }
    content.vb: Public Property IsFromRoot As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: ParseDocsPages.Data_Model.TocModel.IsFromRoot*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ParseDocsPages.Data_Model.TocModel.CompareTo(ParseDocsPages.Data_Model.TocModel)
  commentId: M:ParseDocsPages.Data_Model.TocModel.CompareTo(ParseDocsPages.Data_Model.TocModel)
  id: CompareTo(ParseDocsPages.Data_Model.TocModel)
  parent: ParseDocsPages.Data_Model.TocModel
  langs:
  - csharp
  - vb
  name: CompareTo(TocModel)
  nameWithType: TocModel.CompareTo(TocModel)
  fullName: ParseDocsPages.Data_Model.TocModel.CompareTo(ParseDocsPages.Data_Model.TocModel)
  type: Method
  source:
    id: CompareTo
    path: E:\Test\CATS\ParsePages\ParseDocsPages\Data Model\TocModel.cs
    startLine: 29
  assemblies:
  - ParseDocsPages
  namespace: ParseDocsPages.Data_Model
  syntax:
    content: public int CompareTo(TocModel other)
    content.vb: Public Function CompareTo(other As TocModel) As Integer
    parameters:
    - id: other
      type: ParseDocsPages.Data_Model.TocModel
    return:
      type: System.Int32
  overload: ParseDocsPages.Data_Model.TocModel.CompareTo*
  implements:
  - System.IComparable{ParseDocsPages.Data_Model.TocModel}.CompareTo(ParseDocsPages.Data_Model.TocModel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: ParseDocsPages.Data_Model
  commentId: N:ParseDocsPages.Data_Model
  isExternal: false
  name: ParseDocsPages.Data_Model
  nameWithType: ParseDocsPages.Data_Model
  fullName: ParseDocsPages.Data_Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IComparable{ParseDocsPages.Data_Model.TocModel}
  commentId: T:System.IComparable{ParseDocsPages.Data_Model.TocModel}
  parent: System
  definition: System.IComparable`1
  name: IComparable<TocModel>
  nameWithType: IComparable<TocModel>
  fullName: System.IComparable<ParseDocsPages.Data_Model.TocModel>
  nameWithType.vb: IComparable(Of TocModel)
  fullName.vb: System.IComparable(Of ParseDocsPages.Data_Model.TocModel)
  name.vb: IComparable(Of TocModel)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ParseDocsPages.Data_Model.TocModel
    name: TocModel
    nameWithType: TocModel
    fullName: ParseDocsPages.Data_Model.TocModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ParseDocsPages.Data_Model.TocModel
    name: TocModel
    nameWithType: TocModel
    fullName: ParseDocsPages.Data_Model.TocModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ParseDocsPages.Data_Model.TocModel.ParseCommon.Utilities.SerializeXml``1
  commentId: M:ParseCommon.Utilities.SerializeXml``1(``0)
  parent: ParseCommon.Utilities
  definition: ParseCommon.Utilities.SerializeXml``1(``0)
  name: SerializeXml<TocModel>()
  nameWithType: Utilities.SerializeXml<TocModel>()
  fullName: ParseCommon.Utilities.SerializeXml<ParseDocsPages.Data_Model.TocModel>()
  nameWithType.vb: Utilities.SerializeXml(Of TocModel)()
  fullName.vb: ParseCommon.Utilities.SerializeXml(Of ParseDocsPages.Data_Model.TocModel)()
  name.vb: SerializeXml(Of TocModel)()
  spec.csharp:
  - uid: ParseCommon.Utilities.SerializeXml``1
    name: SerializeXml<TocModel>
    nameWithType: Utilities.SerializeXml<TocModel>
    fullName: ParseCommon.Utilities.SerializeXml<ParseDocsPages.Data_Model.TocModel>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ParseCommon.Utilities.SerializeXml``1
    name: SerializeXml(Of TocModel)
    nameWithType: Utilities.SerializeXml(Of TocModel)
    fullName: ParseCommon.Utilities.SerializeXml(Of ParseDocsPages.Data_Model.TocModel)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ParseCommon.Utilities.SerializeXml``1(``0)
  commentId: M:ParseCommon.Utilities.SerializeXml``1(``0)
  isExternal: false
  name: SerializeXml<T>(T)
  nameWithType: Utilities.SerializeXml<T>(T)
  fullName: ParseCommon.Utilities.SerializeXml<T>(T)
  nameWithType.vb: Utilities.SerializeXml(Of T)(T)
  fullName.vb: ParseCommon.Utilities.SerializeXml(Of T)(T)
  name.vb: SerializeXml(Of T)(T)
  spec.csharp:
  - uid: ParseCommon.Utilities.SerializeXml``1(``0)
    name: SerializeXml<T>
    nameWithType: Utilities.SerializeXml<T>
    fullName: ParseCommon.Utilities.SerializeXml<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ParseCommon.Utilities.SerializeXml``1(``0)
    name: SerializeXml(Of T)
    nameWithType: Utilities.SerializeXml(Of T)
    fullName: ParseCommon.Utilities.SerializeXml(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ParseCommon.Utilities
  commentId: T:ParseCommon.Utilities
  parent: ParseCommon
  isExternal: false
  name: Utilities
  nameWithType: Utilities
  fullName: ParseCommon.Utilities
- uid: ParseCommon
  commentId: N:ParseCommon
  isExternal: false
  name: ParseCommon
  nameWithType: ParseCommon
  fullName: ParseCommon
- uid: ParseDocsPages.Data_Model.TocModel.Href*
  commentId: Overload:ParseDocsPages.Data_Model.TocModel.Href
  isExternal: false
  name: Href
  nameWithType: TocModel.Href
  fullName: ParseDocsPages.Data_Model.TocModel.Href
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ParseDocsPages.Data_Model.TocModel.Name*
  commentId: Overload:ParseDocsPages.Data_Model.TocModel.Name
  isExternal: false
  name: Name
  nameWithType: TocModel.Name
  fullName: ParseDocsPages.Data_Model.TocModel.Name
- uid: ParseDocsPages.Data_Model.TocModel.Children*
  commentId: Overload:ParseDocsPages.Data_Model.TocModel.Children
  isExternal: false
  name: Children
  nameWithType: TocModel.Children
  fullName: ParseDocsPages.Data_Model.TocModel.Children
- uid: System.Collections.Generic.List{ParseDocsPages.Data_Model.TocModel}
  commentId: T:System.Collections.Generic.List{ParseDocsPages.Data_Model.TocModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TocModel>
  nameWithType: List<TocModel>
  fullName: System.Collections.Generic.List<ParseDocsPages.Data_Model.TocModel>
  nameWithType.vb: List(Of TocModel)
  fullName.vb: System.Collections.Generic.List(Of ParseDocsPages.Data_Model.TocModel)
  name.vb: List(Of TocModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ParseDocsPages.Data_Model.TocModel
    name: TocModel
    nameWithType: TocModel
    fullName: ParseDocsPages.Data_Model.TocModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ParseDocsPages.Data_Model.TocModel
    name: TocModel
    nameWithType: TocModel
    fullName: ParseDocsPages.Data_Model.TocModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: ParseDocsPages.Data_Model.TocModel.RelativePath*
  commentId: Overload:ParseDocsPages.Data_Model.TocModel.RelativePath
  isExternal: false
  name: RelativePath
  nameWithType: TocModel.RelativePath
  fullName: ParseDocsPages.Data_Model.TocModel.RelativePath
- uid: ParseDocsPages.Data_Model.TocModel.Parent*
  commentId: Overload:ParseDocsPages.Data_Model.TocModel.Parent
  isExternal: false
  name: Parent
  nameWithType: TocModel.Parent
  fullName: ParseDocsPages.Data_Model.TocModel.Parent
- uid: ParseDocsPages.Data_Model.TocModel
  commentId: T:ParseDocsPages.Data_Model.TocModel
  parent: ParseDocsPages.Data_Model
  isExternal: false
  name: TocModel
  nameWithType: TocModel
  fullName: ParseDocsPages.Data_Model.TocModel
- uid: ParseDocsPages.Data_Model.TocModel.IsExpand*
  commentId: Overload:ParseDocsPages.Data_Model.TocModel.IsExpand
  isExternal: false
  name: IsExpand
  nameWithType: TocModel.IsExpand
  fullName: ParseDocsPages.Data_Model.TocModel.IsExpand
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: ParseDocsPages.Data_Model.TocModel.IsFromRoot*
  commentId: Overload:ParseDocsPages.Data_Model.TocModel.IsFromRoot
  isExternal: false
  name: IsFromRoot
  nameWithType: TocModel.IsFromRoot
  fullName: ParseDocsPages.Data_Model.TocModel.IsFromRoot
- uid: ParseDocsPages.Data_Model.TocModel.CompareTo*
  commentId: Overload:ParseDocsPages.Data_Model.TocModel.CompareTo
  isExternal: false
  name: CompareTo
  nameWithType: TocModel.CompareTo
  fullName: ParseDocsPages.Data_Model.TocModel.CompareTo
- uid: System.IComparable{ParseDocsPages.Data_Model.TocModel}.CompareTo(ParseDocsPages.Data_Model.TocModel)
  commentId: M:System.IComparable{ParseDocsPages.Data_Model.TocModel}.CompareTo(ParseDocsPages.Data_Model.TocModel)
  parent: System.IComparable{ParseDocsPages.Data_Model.TocModel}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(TocModel)
  nameWithType: IComparable<TocModel>.CompareTo(TocModel)
  fullName: System.IComparable<ParseDocsPages.Data_Model.TocModel>.CompareTo(ParseDocsPages.Data_Model.TocModel)
  nameWithType.vb: IComparable(Of TocModel).CompareTo(TocModel)
  fullName.vb: System.IComparable(Of ParseDocsPages.Data_Model.TocModel).CompareTo(ParseDocsPages.Data_Model.TocModel)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<TocModel>.CompareTo
    fullName: System.IComparable<ParseDocsPages.Data_Model.TocModel>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: ParseDocsPages.Data_Model.TocModel
    name: TocModel
    nameWithType: TocModel
    fullName: ParseDocsPages.Data_Model.TocModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of TocModel).CompareTo
    fullName: System.IComparable(Of ParseDocsPages.Data_Model.TocModel).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: ParseDocsPages.Data_Model.TocModel
    name: TocModel
    nameWithType: TocModel
    fullName: ParseDocsPages.Data_Model.TocModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
